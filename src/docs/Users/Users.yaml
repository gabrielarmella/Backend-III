paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Retrieve all users from the database.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: success
                  payload:
                    type: array
                    items:
                      $ref: '#/components/schemas/User'
  /api/users/{uid}:
    get:
      tags:
        - Users
      summary: Get user by ID
      description: Retrieve a user by their unique ID.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: The ID of the user.
      responses:
        '200':
          description: Successful response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /api/users/{uid}/documents:
    post:
      tags:
        - Users
      summary: Add documents to a user
      description: Upload documents for a specific user.
      parameters:
        - in: path
          name: uid
          required: true
          schema:
            type: string
          description: The ID of the user.
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                documents:
                  type: array
                  items:
                    type: string
                    format: binary
      responses:
        '200':
          description: Documents added successfully.
components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        role:
          type: string
        pets:
          type: array
          items:
            type: string
        documents:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              reference:
                type: string